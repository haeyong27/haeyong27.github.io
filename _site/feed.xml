<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Actually, less is more!</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 10 May 2019 22:28:29 +0900</pubDate>
    <lastBuildDate>Fri, 10 May 2019 22:28:29 +0900</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>REST API</title>
        <description>&lt;p&gt;youtube : &lt;a href=&quot;https://www.youtube.com/watch?v=RP_f5dMoHFc&amp;amp;t=35s&quot;&gt;그런 REST API로 괜찮은가&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;서버와 클라이언트가 독립적으로 진화한다.
서버의 기능이 변경되어도 클라이언트를 업데이트할 필요가 없다. 
REST를 만들게 된 계기 : How do I improve HTTP without breaking the web.&lt;/p&gt;

&lt;p&gt;현재 웹 페이지를 변경했다고 웹 브라우저를 업데이트할 필요는 없다. 반대도 마찬가지
http명세가 변경되어도 웹은 잘 동작한다.&lt;/p&gt;
</description>
        <pubDate>Fri, 10 May 2019 16:42:00 +0900</pubDate>
        <link>http://localhost:4000/2019/05/10/rest/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/05/10/rest/</guid>
        
        <category>backend</category>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>iterm2 setting</title>
        <description>&lt;p&gt;youtube : &lt;a href=&quot;https://www.youtube.com/watch?v=pTW02GMeI74&quot;&gt;Customizing iterm2 with ZSH and PowerLevel9k&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;유튜브 링크 걸면 이미지까지 같이 보여주는거
사진넣기&lt;/p&gt;
</description>
        <pubDate>Fri, 10 May 2019 16:42:00 +0900</pubDate>
        <link>http://localhost:4000/2019/05/10/iterm2/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/05/10/iterm2/</guid>
        
        <category>backend</category>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>VSCode 장고 디버깅 세팅하기</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.askcompany.kr/r/articles/fdd389f/&quot;&gt;Ask Company VOD&lt;/a&gt; 의 컨텐츠를 기반으로 작성된 포스팅입니다. &lt;br /&gt;
&lt;img src=&quot;https://askcompanyjpe.blob.core.windows.net/static/askcompany_vod_shared_banner.jpg&quot; style=&quot;border: 0; width: 250px;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 10 May 2019 16:42:00 +0900</pubDate>
        <link>http://localhost:4000/2019/05/10/debug/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/05/10/debug/</guid>
        
        <category>debug</category>
        
        
        <category>django</category>
        
      </item>
    
      <item>
        <title>django start</title>
        <description>&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;
&lt;p&gt;웹 서비스, 앱 서버, 챗봇 서비스 
웹 서비스를 만들 때 마다 반복되는것들을 표준화 해서 묶어놓은것 
모든 언어 마다 웹 프레임워크가 존재한다.&lt;/p&gt;

&lt;p&gt;django는 백엔드 개발에 필요한 거의 모든 기능을 제공한다&lt;/p&gt;

&lt;h3 id=&quot;django의-강점&quot;&gt;django의 강점&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;python 생태계&lt;/li&gt;
  &lt;li&gt;풀스탤 웹 프레임워크&lt;/li&gt;
  &lt;li&gt;10년동안 성숙&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;웹-서비스-개발-파트&quot;&gt;웹 서비스 개발 파트&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;백엔드 개발&lt;/li&gt;
  &lt;li&gt;서버운영&lt;/li&gt;
  &lt;li&gt;프론트엔드 개발&lt;/li&gt;
  &lt;li&gt;앱 개발&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;환경세팅&quot;&gt;환경세팅&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.anaconda.com/anaconda/user-guide/faq/&quot;&gt;아나콘다 설치 팁&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To see if the conda installation of Python is in your PATH variable:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On macOS and Linux, open the terminal and run—&lt;code class=&quot;highlighter-rouge&quot;&gt;echo $PATH&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;On Windows, open an Anaconda Prompt and run—&lt;code class=&quot;highlighter-rouge&quot;&gt;echo %PATH%&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To see which Python installation is currently set as the default:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On macOS and Linux, open the terminal and run—&lt;code class=&quot;highlighter-rouge&quot;&gt;which python&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;On Windows, open an Anaconda Prompt and run—&lt;code class=&quot;highlighter-rouge&quot;&gt;where python&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To see which packages are installed in your current conda environment and their version numbers, in your terminal window or an Anaconda Prompt, run &lt;code class=&quot;highlighter-rouge&quot;&gt;conda list&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 09 May 2019 14:31:01 +0900</pubDate>
        <link>http://localhost:4000/2019/05/09/django_start/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/05/09/django_start/</guid>
        
        <category>django</category>
        
        
        <category>django</category>
        
      </item>
    
      <item>
        <title>platform</title>
        <description>&lt;p&gt;브런치&lt;br /&gt;
&lt;a href=&quot;https://brunch.co.kr/@rainpour/3&quot;&gt;스타트업에 대하여&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 08 May 2019 20:40:00 +0900</pubDate>
        <link>http://localhost:4000/2019/05/08/youtubeapi/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/05/08/youtubeapi/</guid>
        
        <category>platform</category>
        
        
        <category>etc</category>
        
      </item>
    
      <item>
        <title>첫 포스트</title>
        <description>&lt;p&gt;첫 글&lt;/p&gt;

&lt;p&gt;First POST build by Jekyll.&lt;/p&gt;

</description>
        <pubDate>Mon, 22 Apr 2019 14:31:01 +0900</pubDate>
        <link>http://localhost:4000/2019/04/22/welcome-to-jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/04/22/welcome-to-jekyll/</guid>
        
        <category>debug</category>
        
        
        <category>daily</category>
        
      </item>
    
  </channel>
</rss>
